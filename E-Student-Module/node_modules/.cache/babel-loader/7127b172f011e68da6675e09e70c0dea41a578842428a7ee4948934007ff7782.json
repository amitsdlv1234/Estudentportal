{"ast":null,"code":"var _jsxFileName = \"E:\\\\Protal\\\\AithStudentPortal\\\\E-Student-Module\\\\src\\\\components\\\\TimeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StudentDepart, StudentSeme } from '../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timetable = () => {\n  _s();\n  // State variables\n  const {\n    userroll\n  } = useParams();\n  const [timetableData, setTimetableData] = useState([]);\n  const [studentRollNo, setStudentRollNo] = useState('');\n  const [department, setDepartment] = useState('');\n  const [semester, setSemester] = useState('');\n\n  // Fetch department and semester based on student roll number\n  useEffect(() => {\n    const fetchStudentInfo = async () => {\n      try {\n        // Fetch student information based on roll number\n        const studentDepartment = await StudentDepart(userroll);\n        const studentSemester = await StudentSeme(userroll);\n        // const studentData = await studentResponse.json();\n\n        // Update department and semester state based on student information\n        setDepartment(studentDepartment.data);\n        setSemester(studentSemester.data);\n        console.log(studentDepartment.data, studentSemester.data);\n        console.log(department, semester);\n      } catch (error) {\n        console.error('Error fetching student information:', error);\n      }\n    };\n    fetchStudentInfo();\n  }, [studentRollNo]);\n\n  // Fetch timetable data based on department and semester\n  //   useEffect(() => {\n  // const fetchTimetable = async () => {\n  //   try {\n  // Fetch timetable data based on department and semester\n  // const response = await fetch(\n  //   `/api/timetable?department=${department}&semester=${semester}`\n  // );\n  // const data = await response.json();\n  // setTimetableData(data);\n  //   } catch (error) {\n  // console.error('Error fetching timetable:', error);\n  //   }\n  // };\n\n  // Fetch timetable data only if both department and semester are available\n  // if (department && semester) {\n  //   fetchTimetable();\n  // }\n  //   }, [department, semester]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Timetable for \", department, \" - Semester \", semester]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), timetableData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TimetableID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TeacherName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SubjectName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DayOfWeek\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PeriodNumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: timetableData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.TimetableID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.TeacherName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.SubjectName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.DayOfWeek\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.PeriodNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, item.TimetableID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No timetable data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Timetable, \"YQyAnG7c+XL6GF3Sz3JHe1nRwi4=\", false, function () {\n  return [useParams];\n});\n_c = Timetable;\nexport default Timetable;\nvar _c;\n$RefreshReg$(_c, \"Timetable\");","map":{"version":3,"names":["React","useState","useEffect","useParams","StudentDepart","StudentSeme","jsxDEV","_jsxDEV","Timetable","_s","userroll","timetableData","setTimetableData","studentRollNo","setStudentRollNo","department","setDepartment","semester","setSemester","fetchStudentInfo","studentDepartment","studentSemester","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","TimetableID","TeacherName","SubjectName","DayOfWeek","PeriodNumber","_c","$RefreshReg$"],"sources":["E:/Protal/AithStudentPortal/E-Student-Module/src/components/TimeTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n import { StudentDepart,StudentSeme } from '../Services/api';\r\nconst Timetable = () => {\r\n  // State variables\r\n  const { userroll} = useParams();\r\n  const [timetableData, setTimetableData] = useState([]);\r\n  const [studentRollNo, setStudentRollNo] = useState('');\r\n  const [department, setDepartment] = useState('');\r\n  const [semester, setSemester] = useState('');\r\n\r\n  // Fetch department and semester based on student roll number\r\n  useEffect(() => {\r\n    const fetchStudentInfo = async () => {\r\n      try {\r\n        // Fetch student information based on roll number\r\n        const studentDepartment = await StudentDepart(userroll);\r\n        const studentSemester = await StudentSeme(userroll);\r\n        // const studentData = await studentResponse.json();\r\n\r\n        // Update department and semester state based on student information\r\n        setDepartment(studentDepartment.data);\r\n        setSemester(studentSemester.data);\r\n        console.log(studentDepartment.data,studentSemester.data);\r\n        console.log(department,semester);\r\n      } catch (error) {\r\n        console.error('Error fetching student information:', error);\r\n      }\r\n    };\r\n\r\n    fetchStudentInfo();\r\n  }, [studentRollNo]);\r\n\r\n  // Fetch timetable data based on department and semester\r\n//   useEffect(() => {\r\n    // const fetchTimetable = async () => {\r\n    //   try {\r\n        // Fetch timetable data based on department and semester\r\n        // const response = await fetch(\r\n        //   `/api/timetable?department=${department}&semester=${semester}`\r\n        // );\r\n        // const data = await response.json();\r\n        // setTimetableData(data);\r\n    //   } catch (error) {\r\n        // console.error('Error fetching timetable:', error);\r\n    //   }\r\n    // };\r\n\r\n    // Fetch timetable data only if both department and semester are available\r\n    // if (department && semester) {\r\n    //   fetchTimetable();\r\n    // }\r\n//   }, [department, semester]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Timetable for {department} - Semester {semester}</h2>\r\n      {timetableData.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>TimetableID</th>\r\n              <th>TeacherName</th>\r\n              <th>SubjectName</th>\r\n              <th>DayOfWeek</th>\r\n              <th>PeriodNumber</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {timetableData.map((item) => (\r\n              <tr key={item.TimetableID}>\r\n                <td>{item.TimetableID}</td>\r\n                <td>{item.TeacherName}</td>\r\n                <td>{item.SubjectName}</td>\r\n                <td>{item.DayOfWeek}</td>\r\n                <td>{item.PeriodNumber}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No timetable data available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Protal\\\\AithStudentPortal\\\\E-Student-Module\\\\src\\\\components\\\\AssignmentView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StudentDepart, StudentSeme, StudentAssignment } from '../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentData = () => {\n  _s();\n  const [studentData, setStudentData] = useState(null);\n  const {\n    userroll\n  } = useParams();\n  const [department, setDepartment] = useState({\n    Branch: ''\n  });\n  const [semester, setSemester] = useState({\n    CurrentSemester: ''\n  });\n\n  // Fetch department and semester based on student roll number\n  useEffect(() => {\n    fetchStudentInfo();\n  }, [userroll]);\n  const fetchStudentInfo = async () => {\n    try {\n      // Fetch student information based on roll number\n      const studentDepartment = await StudentDepart(userroll);\n      const studentSemester = await StudentSeme(userroll);\n      // const studentData = await studentResponse.json();\n\n      // Update department and semester state based on student information\n      setDepartment(studentDepartment.data[0].Branch);\n      setSemester(studentSemester.data[0].CurrentSemester);\n      // console.log(studentDepartment.data,studentSemester.data);\n    } catch (error) {\n      console.error('Error fetching student information:', error);\n    }\n  };\n  useEffect(() => {\n    // Assuming you have an API endpoint to fetch student data by RollNo\n    const fetchStudentData = async () => {\n      try {\n        const response = await StudentAssignment(department, semester);\n        // const data = await response.json();\n        setStudentData(data);\n      } catch (error) {\n        console.error('Error fetching student data:', error);\n      }\n    };\n    fetchStudentData();\n  }, [department, semester]);\n  // \n  useEffect(() => {\n    console.log(department, semester);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: studentData ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"AssignmentId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"RollNo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TeacherId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SubjectId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DateofEsu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DateofSubmit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: studentData.map(assignment => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.AssignmentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.RollNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.TeacherId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.SubjectId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.DateofEsu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.DateofSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.Status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, assignment.AssignmentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading student data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentData, \"zaTYYnjeWy510hJTobsNI9h5O3s=\", false, function () {\n  return [useParams];\n});\n_c = StudentData;\nexport default StudentData;\nvar _c;\n$RefreshReg$(_c, \"StudentData\");","map":{"version":3,"names":["React","useState","useEffect","useParams","StudentDepart","StudentSeme","StudentAssignment","jsxDEV","_jsxDEV","StudentData","_s","studentData","setStudentData","userroll","department","setDepartment","Branch","semester","setSemester","CurrentSemester","fetchStudentInfo","studentDepartment","studentSemester","data","error","console","fetchStudentData","response","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","assignment","AssignmentId","RollNo","TeacherId","SubjectId","DateofEsu","DateofSubmit","Status","_c","$RefreshReg$"],"sources":["E:/Protal/AithStudentPortal/E-Student-Module/src/components/AssignmentView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { StudentDepart,StudentSeme ,StudentAssignment} from '../Services/api';\r\n\r\nconst StudentData = () => {\r\n  const [studentData, setStudentData] = useState(null);\r\n  const { userroll} = useParams();\r\n  const [department, setDepartment] = useState({Branch:''});\r\n  const [semester, setSemester] = useState({CurrentSemester:''});\r\n  \r\n\r\n  // Fetch department and semester based on student roll number\r\n  useEffect(() => {\r\n    fetchStudentInfo();\r\n  }, [userroll]);\r\n  const fetchStudentInfo = async () => {\r\n    try {\r\n      // Fetch student information based on roll number\r\n      const studentDepartment = await StudentDepart(userroll);\r\n      const studentSemester = await StudentSeme(userroll);\r\n      // const studentData = await studentResponse.json();\r\n\r\n      // Update department and semester state based on student information\r\n      setDepartment(studentDepartment.data[0].Branch);\r\n      setSemester(studentSemester.data[0].CurrentSemester);\r\n      // console.log(studentDepartment.data,studentSemester.data);\r\n     \r\n    } catch (error) {\r\n      console.error('Error fetching student information:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Assuming you have an API endpoint to fetch student data by RollNo\r\n    const fetchStudentData = async () => {\r\n      try {\r\n        const response = await StudentAssignment(department,semester);\r\n        // const data = await response.json();\r\n        setStudentData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching student data:', error);\r\n      }\r\n    };\r\n\r\n    fetchStudentData();\r\n  }, [department,semester]);\r\n// \r\n    useEffect(()=>{\r\n      console.log(department,semester);\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {studentData ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>AssignmentId</th>\r\n              <th>RollNo</th>\r\n              <th>TeacherId</th>\r\n              <th>SubjectId</th>\r\n              <th>DateofEsu</th>\r\n              <th>DateofSubmit</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {studentData.map((assignment) => (\r\n              <tr key={assignment.AssignmentId}>\r\n                <td>{assignment.AssignmentId}</td>\r\n                <td>{assignment.RollNo}</td>\r\n                <td>{assignment.TeacherId}</td>\r\n                <td>{assignment.SubjectId}</td>\r\n                <td>{assignment.DateofEsu}</td>\r\n                <td>{assignment.DateofSubmit}</td>\r\n                <td>{assignment.Status}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>Loading student data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
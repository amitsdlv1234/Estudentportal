{"ast":null,"code":"var _jsxFileName = \"E:\\\\Protal\\\\AithStudentPortal\\\\E-Student-Module\\\\src\\\\components\\\\TimeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StudentDepart, StudentSeme, getTimeTable } from '../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timetable = () => {\n  _s();\n  // State variables\n  const {\n    userroll\n  } = useParams();\n  const [timetableData, setTimetableData] = useState([]);\n  //   const [studentRollNo, setStudentRollNo] = useState('');\n  const [department, setDepartment] = useState({\n    Branch: ''\n  });\n  const [semester, setSemester] = useState({\n    CurrentSemester: ''\n  });\n\n  // Fetch department and semester based on student roll number\n  useEffect(() => {\n    fetchStudentInfo();\n  }, [userroll]);\n  const fetchStudentInfo = async () => {\n    try {\n      // Fetch student information based on roll number\n      const studentDepartment = await StudentDepart(userroll);\n      const studentSemester = await StudentSeme(userroll);\n      // const studentData = await studentResponse.json();\n\n      // Update department and semester state based on student information\n      setDepartment(studentDepartment.data[0].Branch);\n      setSemester(studentSemester.data[0].CurrentSemester);\n      //   console.log(studentDepartment.data[0].Branch,studentSemester.data[0].CurrentSemester);\n    } catch (error) {\n      console.error('Error fetching student information:', error);\n    }\n  };\n  useEffect(() => {\n    console.log(department, semester);\n    console.log();\n  });\n\n  // Fetch timetable data based on department and semester\n  useEffect(() => {\n    const fetchTimetable = async () => {\n      try {\n        // Fetch timetable data based on department and semester\n        const res = await getTimeTable(department, semester);\n        setTimetableData(res.data);\n      } catch (error) {\n        console.error('Error fetching timetable:', error);\n      }\n    };\n\n    // Fetch timetable data only if both department and semester are available\n    if (department && semester) {\n      fetchTimetable();\n    }\n  }, [department, semester]);\n  useEffect(() => {\n    console.log(department, semester);\n    console.log();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Timetable for \", department, \" \", semester / 2 != 0 ? \"ODD Semester\" : \"EVEN Semeter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), timetableData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TimetableID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TeacherName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SubjectName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DayOfWeek\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PeriodNumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: timetableData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.TimetableID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.TeacherName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.SubjectName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.DayOfWeek\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.PeriodNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, item.TimetableID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No timetable data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Timetable, \"BfvNgU2/+JulZFv3+Y6kc2dUmh0=\", false, function () {\n  return [useParams];\n});\n_c = Timetable;\nexport default Timetable;\nvar _c;\n$RefreshReg$(_c, \"Timetable\");","map":{"version":3,"names":["React","useState","useEffect","useParams","StudentDepart","StudentSeme","getTimeTable","jsxDEV","_jsxDEV","Timetable","_s","userroll","timetableData","setTimetableData","department","setDepartment","Branch","semester","setSemester","CurrentSemester","fetchStudentInfo","studentDepartment","studentSemester","data","error","console","log","fetchTimetable","res","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","TimetableID","TeacherName","SubjectName","DayOfWeek","PeriodNumber","_c","$RefreshReg$"],"sources":["E:/Protal/AithStudentPortal/E-Student-Module/src/components/TimeTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n import { StudentDepart,StudentSeme ,getTimeTable} from '../Services/api';\r\nconst Timetable = () => {\r\n  // State variables\r\n  const { userroll} = useParams();\r\n  const [timetableData, setTimetableData] = useState([]);\r\n//   const [studentRollNo, setStudentRollNo] = useState('');\r\n  const [department, setDepartment] = useState({Branch:''});\r\n  const [semester, setSemester] = useState({CurrentSemester:''});\r\n\r\n  // Fetch department and semester based on student roll number\r\n  useEffect(() => {\r\n    fetchStudentInfo();\r\n  }, [userroll]);\r\n  const fetchStudentInfo = async () => {\r\n    try {\r\n      // Fetch student information based on roll number\r\n      const studentDepartment = await StudentDepart(userroll);\r\n      const studentSemester = await StudentSeme(userroll);\r\n      // const studentData = await studentResponse.json();\r\n\r\n      // Update department and semester state based on student information\r\n      setDepartment(studentDepartment.data[0].Branch);\r\n      setSemester(studentSemester.data[0].CurrentSemester);\r\n    //   console.log(studentDepartment.data[0].Branch,studentSemester.data[0].CurrentSemester);\r\n     \r\n    } catch (error) {\r\n      console.error('Error fetching student information:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    console.log(department,semester);\r\n    console.log()\r\n})\r\n\r\n// Fetch timetable data based on department and semester\r\n  useEffect(() => {\r\n    const fetchTimetable = async () => {\r\n      try {\r\n        // Fetch timetable data based on department and semester\r\n        const res = await getTimeTable(department,semester);\r\n        setTimetableData(res.data);\r\n      } catch (error) {\r\n        console.error('Error fetching timetable:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch timetable data only if both department and semester are available\r\n    if (department && semester) {\r\n      fetchTimetable();\r\n    }\r\n  }, [department, semester]);\r\n\r\n   \r\nuseEffect(()=>{\r\n    console.log(department,semester);\r\n    console.log()\r\n})\r\n\r\n  return (\r\n    <div>\r\n      <h2>Timetable for {department} {semester/2!=0?\"ODD Semester\":\"EVEN Semeter\"}</h2>\r\n      {timetableData.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>TimetableID</th>\r\n              <th>TeacherName</th>\r\n              <th>SubjectName</th>\r\n              <th>DayOfWeek</th>\r\n              <th>PeriodNumber</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {timetableData.map((item) => (\r\n              <tr key={item.TimetableID}>\r\n                <td>{item.TimetableID}</td>\r\n                <td>{item.TeacherName}</td>\r\n                <td>{item.SubjectName}</td>\r\n                <td>{item.DayOfWeek}</td>\r\n                <td>{item.PeriodNumber}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No timetable data available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}